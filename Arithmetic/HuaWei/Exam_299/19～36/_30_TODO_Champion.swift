//
//  _30_Champion.swift
//  Arithmetic
//
//  Created by shengangneng on 2023/9/30.
//

import Foundation

/*
 有N(3=N<10000)个运动员，他们的id为0到N-1.他们的实力由一组整数表示，他们之间进行比赛，需要决出冠亚军。比赛的规则人是0号和1号比赛，2号和3号比赛，以此类推，每一轮，相邻的运动员进行比赛，获胜的进入下轮:实力值大的获胜，实力值相等的情况，id小的情况下获胜:轮空的直接进入下一轮.输入描述:
 输入一行N个数字代表N的运动员的实力值(0<=实力值<=10000000000)输出描述:
 输出冠亚季军的id，用空格隔开
 示例1
 输入:
 23 45
 输出:
 3 1 2
 说明:
 第一轮比赛，id为0实力值为2的运动员和id为1实力值为3的运动员比赛，1号胜出进入下一轮争夺冠亚军，id为2的运动员和id为3的云动员比赛，3号胜出进入下一轮争夺冠亚军:冠亚军比赛，3号胜1号:故冠至为3号，亚军为1号。2号50号，比赛进行委至的全夺，2号实力值为4，0号实力值2，故2号胜出，得季军。冠亚季军为3 12

 */

/*
 冠军肯定是数字最大的
 如果第二大的跟冠军一组，那么第二大的就是季军
 如果第二大的跟冠军不是一组，那么就是亚军
 
 5-6 7-8 9-10 12-13 29-40 20
 6-8 10-13 40-20
 8-13 40
 13-40
 40
 
 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192
 
 */
class _30_Champion {
    // 讲道理，运动员个数应该都是偶数
    func test(_ input: String) {
        var nums = input.split(separator: ",").compactMap { Int(String($0)) }
        // 冠军一定是所有中最大的数字
        // 亚军一定是与冠军另一边的最大的数字
        // 季军一定是与左边次大 跟右边次大的比较
        
//        for i in 0..<
        
        
    }
}
